# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.x'
          channel: 'stable'

      # Create .env file for CI environment
      - name: Create .env file
        run: |
          echo "FIREBASE_API_KEY=test-api-key" >> .env
          echo "FIREBASE_APP_ID=test-app-id" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=test-sender-id" >> .env
          echo "FIREBASE_PROJECT_ID=test-project-id" >> .env
          echo "FIREBASE_STORAGE_BUCKET=test-storage-bucket" >> .env
          echo "APP_NAME=Vet App" >> .env

      # Print debugging information
      - name: Debug information
        run: |
          flutter --version
          flutter doctor -v
          ls -la

      - name: Install dependencies
        run: flutter pub get

      # Analyze Dart code
      - name: Analyze Dart code
        run: flutter analyze

      # Optionally run tests
      # - name: Run tests
      #   run: flutter test
